requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
# IMPORTANT: to run the loop with the example data make sure exampledata = "yes"
exampledata = "no"
for(i in 15:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
# list of required packages
requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
rm(requiredpackages)
# ---------------------------------
# DEFINE WORKING DIRECTORY
# ---------------------------------
# set directory to same parent folder where sub-scripts are found
# the subs-scripts can be in folders within this directory as the code will look through all the folders
my.directory = getwd()
# set directory
setwd(my.directory)
# ---------------------------------
#  - ENVIRONMENTAL VARIABLES
# ---------------------------------
# specify model resolution
# we chose between a grid of 5 x 5 km (res = 5) or 10 x 10 km (res = 10)
res = 10
source(list.files(pattern = "envnt_variable_stack.R", recursive = TRUE, full.names = TRUE))
# ---------------------------------
#  SPECIES SPECIFIC MODEL PARAMETERS
# ---------------------------------
# read master file with species-specific modelling parameters
# this sheet contains a list of all species with some additional data details
master = read_xlsx(list.files(pattern = "data_summary_master.xlsx", recursive = TRUE,full.names = TRUE))
# filter master sheet to keep species with a minimum prevalence of 1
# the prevalence value indicates how much data there is for this species relative to entire modeling surface
# i.e. it is the percentage of cells with data out of total cells, so the lower your resolution, the higher the prevalence
if(res ==10){
master_keep = master %>%
filter(cells_10<20) %>%
filter(cells_10>5)}
# IMPORTANT: to run the loop with the example data make sure exampledata = "yes"
exampledata = "no"
for(i in 15:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
master_keep = master_keep %>%
arrange(cells_10)
for(i in 16:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
# ---------------------------------
# PACKAGES
# ---------------------------------
# list of required packages
requiredpackages = c("grid","colorspace","rgeos","viridis","rasterVis","ggplot2","raster","stringr", "raster", "sf","sp", "dplyr", "lubridate","readxl","stringr")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
rm(requiredpackages)
# ---------------------------------
# DEFINE WORKING DIRECTORY
# ---------------------------------
# set directory to same parent folder where sub-scripts are found
# the subs-scripts can be in folders within this directory as the code will look through all the folders
my.directory = getwd()
# set directory
setwd(my.directory)
# plot folder
if(!dir.exists("Outputs/modelling/prettyplots")){dir.create("Outputs/modelling/prettyplots")}
plotfolder = paste0(my.directory,"/Outputs/modelling/prettyplots/")
# ---------------------------------
# DATA FILES
# ---------------------------------
sdms_rasters = list.files(pattern = "Aseasonal_res10_ensemblemean.tiff", recursive = TRUE, full.names =TRUE)
sdms_rasters
plot(raster(sdms_rasters[12]))
plot(raster(sdms_rasters[18]))
# ---------------------------------
# PACKAGES
# ---------------------------------
# list of required packages
requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# check which packages you need to install
requiredpackages = requiredpackages[which(!(requiredpackages %in% installed.packages()))]
# install packages
install.packages(requiredpackages)
# list of required packages
requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
# intsall latest version of biomod2
devtools::install_github("biomodhub/biomod2", dependencies = TRUE)
rm(requiredpackages)
# ---------------------------------
# DEFINE WORKING DIRECTORY
# ---------------------------------
# set directory to same parent folder where sub-scripts are found
# the subs-scripts can be in folders within this directory as the code will look through all the folders
my.directory = getwd()
# set directory
setwd(my.directory)
# ---------------------------------
#  - ENVIRONMENTAL VARIABLES
# ---------------------------------
# specify model resolution
# we chose between a grid of 5 x 5 km (res = 5) or 10 x 10 km (res = 10)
res = 10
source(list.files(pattern = "envnt_variable_stack.R", recursive = TRUE, full.names = TRUE))
# ---------------------------------
#  SPECIES SPECIFIC MODEL PARAMETERS
# ---------------------------------
# read master file with species-specific modelling parameters
# this sheet contains a list of all species with some additional data details
master = read_xlsx(list.files(pattern = "data_summary_master.xlsx", recursive = TRUE,full.names = TRUE))
# filter master sheet to keep species with a minimum prevalence of 1
# the prevalence value indicates how much data there is for this species relative to entire modeling surface
# i.e. it is the percentage of cells with data out of total cells, so the lower your resolution, the higher the prevalence
if(res ==10){
master_keep = master %>%
filter(cells_10<20) %>%
filter(cells_10>5)}
View(master_keep)
master_keep = master_keep %>%
arrange(desc(cells_10))
for(i in 24:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "no" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
# IMPORTANT: to run the loop with the example data make sure exampledata = "yes"
exampledata = "no"
for(i in 24:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "no" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
# ---------------------------------
# PACKAGES
# ---------------------------------
# list of required packages
requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
# intsall latest version of biomod2
devtools::install_github("biomodhub/biomod2", dependencies = TRUE)
rm(requiredpackages)
# ---------------------------------
# DEFINE WORKING DIRECTORY
# ---------------------------------
# set directory to same parent folder where sub-scripts are found
# the subs-scripts can be in folders within this directory as the code will look through all the folders
my.directory = getwd()
# set directory
setwd(my.directory)
# ---------------------------------
#  - ENVIRONMENTAL VARIABLES
# ---------------------------------
# specify model resolution
# we chose between a grid of 5 x 5 km (res = 5) or 10 x 10 km (res = 10)
res = 10
source(list.files(pattern = "envnt_variable_stack.R", recursive = TRUE, full.names = TRUE))
# ---------------------------------
#  SPECIES SPECIFIC MODEL PARAMETERS
# ---------------------------------
# read master file with species-specific modelling parameters
# this sheet contains a list of all species with some additional data details
master = read_xlsx(list.files(pattern = "data_summary_master.xlsx", recursive = TRUE,full.names = TRUE))
# filter master sheet to keep species with a minimum prevalence of 1
# the prevalence value indicates how much data there is for this species relative to entire modeling surface
# i.e. it is the percentage of cells with data out of total cells, so the lower your resolution, the higher the prevalence
if(res ==10){
master_keep = master %>%
filter(cells_10<20) %>%
filter(cells_10>5)}
View(master_keep)
master_keep = master }
# filter master sheet to keep species with a minimum prevalence of 1
# the prevalence value indicates how much data there is for this species relative to entire modeling surface
# i.e. it is the percentage of cells with data out of total cells, so the lower your resolution, the higher the prevalence
if(res ==10){
master_keep = master }
View(master)
i=5
# IMPORTANT: to run the loop with the example data make sure exampledata = "yes"
exampledata = "no"
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "no" # specifies if substrate layer is to be included
seasonal = "no"
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
plot(obs.data)
plot(obs.data@coords)
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
i=5
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# ---------------------------------
# PACKAGES
# ---------------------------------
# list of required packages
requiredpackages = c("RColorBrewer","scales","devtools","readxl","viridis","devtools","fuzzySim","dismo","rgdal","rgeos","sf","rasterVis","ggplot2","raster","stringr","readxl", "raster", "sp", "dplyr", "lubridate")
# load packages
lapply(requiredpackages,require, character.only = TRUE)
# intsall latest version of biomod2
devtools::install_github("biomodhub/biomod2", dependencies = TRUE)
rm(requiredpackages)
# ---------------------------------
# DEFINE WORKING DIRECTORY
# ---------------------------------
# set directory to same parent folder where sub-scripts are found
# the subs-scripts can be in folders within this directory as the code will look through all the folders
my.directory = getwd()
# set directory
setwd(my.directory)
# ---------------------------------
#  - ENVIRONMENTAL VARIABLES
# ---------------------------------
# specify model resolution
# we chose between a grid of 5 x 5 km (res = 5) or 10 x 10 km (res = 10)
res = 10
source(list.files(pattern = "envnt_variable_stack.R", recursive = TRUE, full.names = TRUE))
# ---------------------------------
#  SPECIES SPECIFIC MODEL PARAMETERS
# ---------------------------------
# read master file with species-specific modelling parameters
# this sheet contains a list of all species with some additional data details
master = read_xlsx(list.files(pattern = "data_summary_master.xlsx", recursive = TRUE,full.names = TRUE))
View(master)
species_tomodel = c("CENTROPHORUS UYATO","LAMNA NASUS","CIRRHIGALEUS ASPER","ETMOPTERUS BIGELOWI","ZAMEUS SQUAMULOSUS","DALATIAS LICHA","CENTROSCYMNUS OWSTONII","GALEUS POLLI","SPHYRNA LEWINI","CRURIRAJA PARCOMACULATA")
master_keep = master %>%
filter(SPECIES_SCIENTIFIC %in% species_tomodel)
View(master_keep)
# IMPORTANT: to run the loop with the example data make sure exampledata = "yes"
exampledata = "no"
View(master_keep)
for(i in 1:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
for(i in 1:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "no" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
for(i in 2:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "yes" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
for(i in 2:nrow(master_keep)){
# MODEL PARAMATERS
target = master_keep$SPECIES_SCIENTIFIC[i] # species name
substrate = "no" # specifies if substrate layer is to be included
seasonal = "no"
#seasonal = master_keep$Seasonality[i] # specifies if seasonal (summer & winter) models are too also be run
# OCCURRENCE DATA
source(list.files(pattern = "species_data.R", recursive = TRUE, full.names = TRUE))
# SAMPLING BIAS
source(list.files(pattern = "subsampling.R", recursive = TRUE, full.names = TRUE))
# BACKGROUND SAMPLE
source(list.files(pattern ="pseudoabsence.R", recursive = TRUE, full.names = TRUE))
# BIOMOD OBJECT CREATION
source(list.files(pattern = "Biomod.R", recursive = TRUE, full.names = TRUE))
# ASEASONAL MODEL RUNS AND PROJECTIONS
model_type = "Aseasonal" # specify model_type
data = biomod_obj # specify which biomod_obj
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
# SEASONAL MODEL RUNS AND PROJECTIONS
if(seasonal == "yes"){
model_type = "summer"
season = 1
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))
model_type = "winter"
season = 2
data = biomod_obj_seasons[[season]]
source(list.files(pattern = "model_runs.R", recursive = TRUE, full.names = TRUE))}
rm(stack_new)}
